import { SQLiteTableWithColumns } from 'drizzle-orm/sqlite-core'

{% for model in models %}
import { {{ model.name | pluralize | lower }} } from './{{ model.name }}Schema'
{%- endfor %}
import { seeds } from '../../seed/schema/SeedSchema'
import { versions } from '../../seed/schema/VersionSchema'
import { metadata } from '../../seed/schema/MetadataSchema'
import { models } from '../../seed/schema/ModelSchema'
import { modelUids } from '../../seed/schema/ModelUidSchema'
{% for model in models %}
export * from './{{ model.name }}Schema'
{%- endfor %}

const tablesByName = new Map<string, SQLiteTableWithColumns<any>>()
{% for model in models %}
tablesByName.set('{{ model.name | pluralize | lower }}', {{ model.name | pluralize | lower }})
{%- endfor %}
tablesByName.set('seeds', seeds)
tablesByName.set('versions', versions)
tablesByName.set('metadata', metadata)
tablesByName.set('models', models)
tablesByName.set('modelUids', modelUids)

export const getTable = (table: string) => {
  return tablesByName.get(table)
}